#############################################################################
# Makefile for building: libpluginGLWidget.so
# Generated by qmake (2.01a) (Qt 4.4.3) on: dc. des. 9 20:39:07 2009
# Project:  widget.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_PLUGIN -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQDESIGNER_EXPORT_WIDGETS -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/default -I. -I/usr/include/QtDesigner -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include/QtOpenGL -I/usr/include/QtOpenGL -I/usr/include/QtXml -I/usr/include/QtXml -I/usr/include/QtScript -I/usr/include/QtScript -I/usr/include -I/usr/X11R6/include -I.moc -I.
LINK          = g++
LFLAGS        = -shared
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtScript -L/usr/lib -pthread -pthread -lQtXml -pthread -pthread -lQtOpenGL -L/usr/X11R6/lib -pthread -pthread -pthread -pthread -pthread -pthread -pthread -pthread -lQtGui -pthread -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lQtDesigner -lGLU -lGL -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = .obj/

####### Files

SOURCES       = glwidgetPlugin.cpp \
		glwidget.cpp \
		object.cpp \
		referencia.cpp \
		tram.cpp \
		scene.cpp \
		face.cpp \
		vertex.cpp \
		color.cpp \
		box.cpp \
		XML.cpp \
		material.cpp \
		material_lib.cpp \
		point.cpp \
		tinystr.cpp \
		tinyxml.cpp \
		tinyxmlerror.cpp \
		tinyxmlparser.cpp \
		vehicle.cpp \
		../llums/boto.cpp \
		../llums/finestraLlums.cpp \
		../llums/main.cpp \
		../llums/sliderText.cpp \
		../llums/textField.cpp .moc/moc_glwidgetPlugin.cpp \
		.moc/moc_glwidget.cpp \
		.moc/moc_boto.cpp \
		.moc/moc_finestraLlums.cpp \
		.moc/moc_sliderText.cpp \
		.moc/moc_textField.cpp
OBJECTS       = .obj/glwidgetPlugin.o \
		.obj/glwidget.o \
		.obj/object.o \
		.obj/referencia.o \
		.obj/tram.o \
		.obj/scene.o \
		.obj/face.o \
		.obj/vertex.o \
		.obj/color.o \
		.obj/box.o \
		.obj/XML.o \
		.obj/material.o \
		.obj/material_lib.o \
		.obj/point.o \
		.obj/tinystr.o \
		.obj/tinyxml.o \
		.obj/tinyxmlerror.o \
		.obj/tinyxmlparser.o \
		.obj/vehicle.o \
		.obj/boto.o \
		.obj/finestraLlums.o \
		.obj/main.o \
		.obj/sliderText.o \
		.obj/textField.o \
		.obj/moc_glwidgetPlugin.o \
		.obj/moc_glwidget.o \
		.obj/moc_boto.o \
		.obj/moc_finestraLlums.o \
		.obj/moc_sliderText.o \
		.obj/moc_textField.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/designer.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		widget.pro
QMAKE_TARGET  = pluginGLWidget
DESTDIR       = 
TARGET        = libpluginGLWidget.so
TARGETD       = libpluginGLWidget.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)



qmake:  FORCE
	@$(QMAKE) -unix -o Makefile.Debug widget.pro

dist: 
	@$(CHK_DIR_EXISTS) .obj/pluginGLWidget1.0.0 || $(MKDIR) .obj/pluginGLWidget1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .obj/pluginGLWidget1.0.0/ && $(COPY_FILE) --parents glwidgetPlugin.h glwidget.h object.h referencia.h tram.h scene.h face.h vertex.h color.h box.h XML.h material.h material_lib.h point.h tinystr.h tinyxml.h vehicle.h ../llums/boto.h ../llums/finestraLlums.h ../llums/llum.h ../llums/sliderText.h ../llums/textField.h ../llums/ui_EditorLlums.h .obj/pluginGLWidget1.0.0/ && $(COPY_FILE) --parents glwidgetPlugin.cpp glwidget.cpp object.cpp referencia.cpp tram.cpp scene.cpp face.cpp vertex.cpp color.cpp box.cpp XML.cpp material.cpp material_lib.cpp point.cpp tinystr.cpp tinyxml.cpp tinyxmlerror.cpp tinyxmlparser.cpp vehicle.cpp ../llums/boto.cpp ../llums/finestraLlums.cpp ../llums/main.cpp ../llums/sliderText.cpp ../llums/textField.cpp .obj/pluginGLWidget1.0.0/ && (cd `dirname .obj/pluginGLWidget1.0.0` && $(TAR) pluginGLWidget1.0.0.tar pluginGLWidget1.0.0 && $(COMPRESS) pluginGLWidget1.0.0.tar) && $(MOVE) `dirname .obj/pluginGLWidget1.0.0`/pluginGLWidget1.0.0.tar.gz . && $(DEL_FILE) -r .obj/pluginGLWidget1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: .moc/moc_glwidgetPlugin.cpp .moc/moc_glwidget.cpp .moc/moc_boto.cpp .moc/moc_finestraLlums.cpp .moc/moc_sliderText.cpp .moc/moc_textField.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) .moc/moc_glwidgetPlugin.cpp .moc/moc_glwidget.cpp .moc/moc_boto.cpp .moc/moc_finestraLlums.cpp .moc/moc_sliderText.cpp .moc/moc_textField.cpp
.moc/moc_glwidgetPlugin.cpp: glwidgetPlugin.h
	/usr/bin/moc $(DEFINES) $(INCPATH) glwidgetPlugin.h -o .moc/moc_glwidgetPlugin.cpp

.moc/moc_glwidget.cpp: vehicle.h \
		object.h \
		vertex.h \
		point.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		tram.h \
		referencia.h \
		scene.h \
		glwidget.h
	/usr/bin/moc $(DEFINES) $(INCPATH) glwidget.h -o .moc/moc_glwidget.cpp

.moc/moc_boto.cpp: ../llums/boto.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../llums/boto.h -o .moc/moc_boto.cpp

.moc/moc_finestraLlums.cpp: ../llums/ui_EditorLlums.h \
		../llums/boto.h \
		../llums/llum.h \
		../llums/sliderText.h \
		../llums/textField.h \
		../llums/finestraLlums.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../llums/finestraLlums.h -o .moc/moc_finestraLlums.cpp

.moc/moc_sliderText.cpp: ../llums/sliderText.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../llums/sliderText.h -o .moc/moc_sliderText.cpp

.moc/moc_textField.cpp: ../llums/textField.h
	/usr/bin/moc $(DEFINES) $(INCPATH) ../llums/textField.h -o .moc/moc_textField.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

.obj/glwidgetPlugin.o: glwidgetPlugin.cpp glwidget.h \
		vehicle.h \
		object.h \
		vertex.h \
		point.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		tram.h \
		referencia.h \
		scene.h \
		glwidgetPlugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/glwidgetPlugin.o glwidgetPlugin.cpp

.obj/glwidget.o: glwidget.cpp glwidget.h \
		vehicle.h \
		object.h \
		vertex.h \
		point.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		tram.h \
		referencia.h \
		scene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/glwidget.o glwidget.cpp

.obj/object.o: object.cpp object.h \
		vertex.h \
		point.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		scene.h \
		referencia.h \
		vehicle.h \
		tram.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/object.o object.cpp

.obj/referencia.o: referencia.cpp referencia.h \
		point.h \
		object.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		scene.h \
		vehicle.h \
		tram.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/referencia.o referencia.cpp

.obj/tram.o: tram.cpp tram.h \
		referencia.h \
		point.h \
		object.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		scene.h \
		vehicle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/tram.o tram.cpp

.obj/scene.o: scene.cpp scene.h \
		referencia.h \
		point.h \
		object.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		vehicle.h \
		tram.h \
		XML.h \
		tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/scene.o scene.cpp

.obj/face.o: face.cpp face.h \
		vertex.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/face.o face.cpp

.obj/vertex.o: vertex.cpp vertex.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/vertex.o vertex.cpp

.obj/color.o: color.cpp color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/color.o color.cpp

.obj/box.o: box.cpp box.h \
		point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/box.o box.cpp

.obj/XML.o: XML.cpp XML.h \
		tinyxml.h \
		tinystr.h \
		scene.h \
		referencia.h \
		point.h \
		object.h \
		vertex.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		vehicle.h \
		tram.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/XML.o XML.cpp

.obj/material.o: material.cpp material.h \
		color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/material.o material.cpp

.obj/material_lib.o: material_lib.cpp material_lib.h \
		material.h \
		color.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/material_lib.o material_lib.cpp

.obj/point.o: point.cpp point.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/point.o point.cpp

.obj/tinystr.o: tinystr.cpp tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/tinystr.o tinystr.cpp

.obj/tinyxml.o: tinyxml.cpp tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/tinyxml.o tinyxml.cpp

.obj/tinyxmlerror.o: tinyxmlerror.cpp tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/tinyxmlerror.o tinyxmlerror.cpp

.obj/tinyxmlparser.o: tinyxmlparser.cpp tinyxml.h \
		tinystr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/tinyxmlparser.o tinyxmlparser.cpp

.obj/vehicle.o: vehicle.cpp vehicle.h \
		object.h \
		vertex.h \
		point.h \
		box.h \
		face.h \
		material_lib.h \
		material.h \
		color.h \
		tram.h \
		referencia.h \
		scene.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/vehicle.o vehicle.cpp

.obj/boto.o: ../llums/boto.cpp ../llums/boto.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/boto.o ../llums/boto.cpp

.obj/finestraLlums.o: ../llums/finestraLlums.cpp ../llums/finestraLlums.h \
		../llums/ui_EditorLlums.h \
		../llums/boto.h \
		../llums/llum.h \
		../llums/sliderText.h \
		../llums/textField.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/finestraLlums.o ../llums/finestraLlums.cpp

.obj/main.o: ../llums/main.cpp ../llums/finestraLlums.h \
		../llums/ui_EditorLlums.h \
		../llums/boto.h \
		../llums/llum.h \
		../llums/sliderText.h \
		../llums/textField.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o ../llums/main.cpp

.obj/sliderText.o: ../llums/sliderText.cpp ../llums/sliderText.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/sliderText.o ../llums/sliderText.cpp

.obj/textField.o: ../llums/textField.cpp ../llums/textField.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/textField.o ../llums/textField.cpp

.obj/moc_glwidgetPlugin.o: .moc/moc_glwidgetPlugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_glwidgetPlugin.o .moc/moc_glwidgetPlugin.cpp

.obj/moc_glwidget.o: .moc/moc_glwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_glwidget.o .moc/moc_glwidget.cpp

.obj/moc_boto.o: .moc/moc_boto.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_boto.o .moc/moc_boto.cpp

.obj/moc_finestraLlums.o: .moc/moc_finestraLlums.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_finestraLlums.o .moc/moc_finestraLlums.cpp

.obj/moc_sliderText.o: .moc/moc_sliderText.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_sliderText.o .moc/moc_sliderText.cpp

.obj/moc_textField.o: .moc/moc_textField.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_textField.o .moc/moc_textField.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home2/users/alumnes/1068258//.designer/plugins/designer/ || $(MKDIR) $(INSTALL_ROOT)/home2/users/alumnes/1068258//.designer/plugins/designer/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/home2/users/alumnes/1068258/.designer/plugins/designer/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home2/users/alumnes/1068258/.designer/plugins/designer/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home2/users/alumnes/1068258//.designer/plugins/designer/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

